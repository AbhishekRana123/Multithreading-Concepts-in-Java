
class Reserve implements Runnable
{
	int available = 1;
	int wanted;
	Reserve(int i)
	{
		wanted = i;
	}
	
	public void run()
	{
		synchronized(this)
		{
			System.out.println("Available Berths = "+available);

			if(available >= wanted)
			{
				String name = Thread.currentThread().getName();
				System.out.println(wanted +"Berth Reserved for"+name);
				try
				{
					Thread.sleep(2000);
					available = available - wanted;
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
			}
			else
			{
				System.out.println("Sorry, no berth");
			}
		}
	}
}
class Safe
{
	public static void main(String args[])
	{
		Reserve obj = new Reserve(1);
		Thread t1 = new Thread(obj);
		Thread t2 = new Thread(obj);
		
		t1.setName("First person");
		t2.setName("Second person");
		
		t1.start();
		t2.start();
	}
}

Output - 
Available Berths = 1
1Berth Reserved forFirst person
Available Berths = 0
Sorry, no berth
